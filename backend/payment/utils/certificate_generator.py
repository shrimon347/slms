import os
from io import BytesIO
from django.conf import settings
from django.utils.timezone import localtime
from reportlab.lib.pagesizes import A4
from reportlab.pdfgen import canvas
from reportlab.lib.utils import ImageReader
from reportlab.lib.colors import HexColor, white
from PIL import Image  # To get the image size

def generate_certificate_pdf(enrollment):
    buffer = BytesIO()

    # Background image
    background_path = os.path.join(
        settings.BASE_DIR, 'static', 'certificate', 'certificate.png'
    )
    with Image.open(background_path) as img:
        img_width, img_height = img.size

    dpi = 72
    width_pt = img_width * 72.0 / dpi
    height_pt = img_height * 72.0 / dpi

    # Create a canvas with the same size as the image
    p = canvas.Canvas(buffer, pagesize=(width_pt, height_pt))

    # Draw the image without scaling (it fits exactly)
    img_reader = ImageReader(background_path)
    p.drawImage(img_reader, 0, 0, width=width_pt, height=height_pt)

    # Center X (in the image-sized page)
    center_x = width_pt / 2

    # Custom text positioning (adjust Y based on image height)
    p.setFont("Courier-Bold", 50)
    p.setFillColor(HexColor("#2D3748"))
    p.drawCentredString(center_x, 660, f"{enrollment.student.full_name}")

    p.setFont("Helvetica", 35)
    p.setFillColor(HexColor("#4A5568"))
    p.drawCentredString(center_x,  610, "for successfully completing the course")

    p.setFont("Helvetica-Bold", 50)
    p.setFillColor(HexColor("#1A202C"))
    p.drawCentredString(center_x, 560, f"{enrollment.course.title}")

    if enrollment.certificate_issue_date:
        formatted_date = localtime(enrollment.certificate_issue_date).strftime("On %B %d, %Y, %I:%M %p")
    else:
        formatted_date = ""

    p.setFont("Helvetica", 30)
    p.setFillColor(HexColor("#2D3748"))
    p.drawCentredString(center_x, 490, f"{formatted_date} | ID: {enrollment.id}")

    p.setFont("Helvetica-Oblique", 20)
    p.setFillColor(white)
    p.drawCentredString(center_x, 20, "This certificate is generated by Shiko LMS")

    # Save and return
    p.showPage()
    p.save()
    buffer.seek(0)
    return buffer

